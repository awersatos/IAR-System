//******************************************************************************
//            ЗАГОЛОВОЧНЫЙ ФАЙЛ БИБЛИОТЕКИ ФУНКЦИЙ МОДУЛЯ GSM
//******************************************************************************

//*****************Подключаемые файлы*******************************************
#include "stm32f10x.h"
//***************Макроопределения***********************************************
      /* Определение используеиого устройства*/
/* #define BLACKBOX //Используемое устройство BLACKBOX */
 #define BRELOK //Используемое устройство BRELOK 

//==============================================================================
#define spi_bufer_size 64  //Размер буфера SPI

#define SPI_PORT GPIOA
#define SPI_SS GPIO_Pin_4
#define SPI_SCK GPIO_Pin_5
#define SPI_MISO GPIO_Pin_6
#define SPI_MOSI GPIO_Pin_7

#ifdef BLACKBOX

  #define TR_GP1 GPIO_Pin_11 //Сервисные порты в BLACKBOX
  #define TR_GP2 GPIO_Pin_12
#else
  #define TR_GP1 GPIO_Pin_2  //Сервисные порты в BRELOK
  #define TR_GP2 GPIO_Pin_3
#endif

#define OUTPUT_POWER 0x3EC0 //Выходная мощность +10dbm
 //=============================================================================
     /*Определение строб-команд трансивера*/
#define SRES 0x30 //Сброс трансивера
#define SIDLE 0x36 //Переход в режим IDLE
#define SCAL 0x33   // Калибровка частотного синтезатора
#define SRX 0x34   // Переход в режим RX
#define STX 0x35   // Переход в режим TX
#define SFRX 0x3A  // Очистка RX FIFO
#define SFTX 0x3B  // Очистка TX FIFO
#define SNOP 0x3D  // Пустая строб-команда
#define SPWD 0x39  //Переходв SLEEP режим
//**************Определение собственных типов***********************************
union u_type  //Определение объединения для доступа к шестнадцатиразрядной переменной побайтово
{
 uint16_t halfword; // Шестнадцатиразрядная переменная 
 char byte[2]; //2 восьмиразрядные переменные
};

//************* Инициализация глобальных переменных ****************************

extern char SPI_buffer[spi_bufer_size]; //Буфер приема и передачи трансивера
extern FunctionalState TX_state; //Статус передачи
extern FunctionalState Transceiver_state; //Статус трансивера
//*************Объявление испльзуемых функций***********************************
char SPI_SEND( char data); //Функция приема/передачи символа по SPI
void RESET_TR(void); //Сброс трансивера по включению питания
void WRITE_TR_REG( uint16_t reg); // Функция записи регистра
char READ_TR_REG( char adr);  // Функция чтения регистра
void STROB(char strob);  //Запись строб-команды
void WRITE_PATABLE(void);    //Запись таблицы мощности
char STATUS_TR(void); //Определение статуса трансивера
void SEND_PAKET(void); //Функция передачи пакета
void RECEIVE_PAKET(void); //Функция приема пакета
void CLEAR_SPI_buffer(void); //Очистка SPI буфера
void Transceiver_Configuration(void); //Инициализация трансивера

/***************************КОНЕЦ ФАЙЛА****************************************/